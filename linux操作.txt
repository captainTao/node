Q&A:
1.ll 查看文件，过滤文件名
root@captain:~# ll /etc/sh
shadow            shadow-           shadowsocks.json  shells

2.ip addr 和ifconfig, ipconfig, curl ip.cn

3.chmod +x shadowsocksR.sh 与数字的区别

4.删除，文件名用正则表达式


RAM，ROM
闪存：ROM
内存: RAM
网关，子网掩码，ICMP,DNS


谷歌DNS:
8.8.8.8
8.8.4.4:53


127.0.0.1
114.114.114.114，1.2.4.8
114.114.114.114,208.67.222.222:443,8.8.8.8

dnsmasq:
-------------
https://wzyboy.im/post/874.html
/etc/dnsmasq.conf    //配置文件地址
/etc/dnsmasq.d
/etc/resolv.conf    //设置本地DNS
nameserver 127.0.0.1

pdnsd:
-------------
讲UDP的DNS请求转换为TCP进行发送；----替代方案：dnsforwarder

///////////////////////////////////////////////////////////////////linux操作

linux常用：
--------------------------------

root@captain:~# 
cat /etc/shadowsocks.json     // ss json配置
vim /etc/shadowsocks.json

!cat  :上次的cat命令
cat id_rsa.pub | pbcopy       // copy 对应文件内容

查看ssh的服务是否开启
netstat -lntp | grep -i sshd
获取sshd
apt-get install openssh-server  //apt, wget:下载

/etc/init.d/shadowsocks start   // start ss
/etc/init.d/shadowsocks restart  // 重启ss
/etc/init.d/iptables stop    //关闭防火墙（iptables）  
service firewalld stop     // 关闭防火墙


查看系统版本：
> lsb_release -a



查看文件属性：
> ll
> ll /etc/sh    // 类似ls

查看文件的可视大小：-h可视， -a:所有
> du -ah :个别文件的值
> du -sh :加和的总值

> virsh list --all: //查看运行的虚拟机 

ip地址：
--------------
ip addr  :ip地址。ifconfig    // mac
curl ip.cn : 当前ip地址
curl cip.cc

> watch 
-------------------
http://www.cnblogs.com/peida/archive/2012/12/31/2840241.html
watch -n 1 -d netstat -ant  // 每隔1s高亮显示网络链接数的变化情况
切换终端: ctrl + x
退出watch: ctrl + g
watch -n 1 -d 'pstree|grep http' // 每隔一秒高亮显示http链接数的变化情况,监听内容用引号括起来
watch 'netstat -an | grep:21 | \ grep<模拟攻击客户机的IP>| wc -l'  // 实时查看模拟攻击客户机建立起来的连接数
watch -d 'ls -l|grep scf'  // 监测当前目录中 scf' 的文件的变化
watch -n 10 'cat /proc/loadavg' //10秒一次输出系统的平均负载


wangsirlemon@c77:~$ watch -h

Usage:
 watch [options] command

Options:
  -b, --beep             beep if command has a non-zero exit
  -c, --color            interpret ANSI color and style sequences
  -d, --differences[=<permanent>]
                         highlight changes between updates
  -e, --errexit          exit if command has a non-zero exit
  -g, --chgexit          exit when output from command changes
  -n, --interval <secs>  seconds to wait between updates
  -p, --precise          attempt run command in precise intervals
  -t, --no-title         turn off header
  -x, --exec             pass command to exec instead of "sh -c"

 -h, --help     display this help and exit
 -v, --version  output version information and exit




> netstat:
------------------- 
https://linux.cn/article-2434-1.html
netstat -tnlup | grep 端口号         //查看tcp,udp端口和进程业务
netstat -lntp          //查看正在监听端口情况
netstat -nltp
netstat –apn | grep 8080  // 8080为端口号
netstat -lntpu   
netstat -ltpe   //tcp监听的拥有者
netstat -rn     //禁用路由解析的路由信息, -r为路由,查看本机路由表
netstat -i     //打印网络接口信息
netstat -atnp | grep ESTA  //获得active状态的链接
watch -d -n0 "netstat -atnp | grep ESTA"  //配合watch命令监听active状态的链接

端口号位1024以上的端口都是随机分配的端口
/*
netstat - 打印网络连接、路由表、连接的数据统计、伪装连接以及广播域成员。
-a: 所有
-u: udp
-t: tcp
-l: listen,正在监听
-n: 禁用域名解析，即：查找每个ip地址对应主机名
-p: 进程名pid
-e: 进程拥有者，相比查看进程，进程拥有者更有用 user ,
-ep: e一般配合p使用
note: -n, -e一起使用，user列的属性是用户的id号，不是用户名
-r: 打印内核路由信息
-i: 打印网络接口信息
-ie： i一般配合e使用，可以输出用户友好的信息,信息和ifconfig内容一致；
-c: 持续输出信息
-g: 输出ipv4,ipv6的多播组信息

service network restart :重启网络服务
*/ 


> grep:
------------------
cat vsftpd.conf | grep -v '^#'   // 查看xx.conf文件中首字符不是#的行

grep -v '^$' /etc/rsyslog.conf | grep -v '^#'
1、-v是grep排除的参数，例如查询除了包含ABC的行，例如cat a.txt|grep -v 'ABC'
2、^代表行首，$代表行尾。 ^$是空行的意思
3、^#表示首字母为#的行，linux里的文件，#号开头一般都是注释内容
4、grep -v '^$' /etc/rsyslog.conf | grep -v '^#'
查询/etc/rsyslog.conf文件，但是不包含空行和注释行
5、-i标识不区分大小写

grep -i multiuser /etc/inittab      grep是在文件的内容中查找，查找multiuser， -i是不区分大小写，

grep lili /etc/passwd


切换用户：
---------------------
su -- lili 切换到lili用户
su -- root 切换到root用户


查看进程：
https://www.cnblogs.com/liuzhengliang/p/4609632.html
---------------------------------------
1、ps 命令用于查看当前正在运行的进程。
grep 是搜索
例如： ps -ef | grep java
表示查看所有进程里 CMD 是 java 的进程信息

2、ps -aux | grep java
ps-aux 显示所有状态
ps -aux | grep xx
ps -aux | grep java，或者直接：
ps -aux | grep pid 查看

3. kill 命令用于终止进程
例如： kill -9 [PID]
-9 表示强迫进程立即停止
通常用 ps 查看进程 PID ，用 kill 命令终止进程



启动和关闭服务：
---------------------------------------
启动服务：(sudo下：)  https://www.cnblogs.com/Berryxiong/p/6193281.html
1.service+服务名称 + start/stop/restart     对服务进行启动
2.直接执行某个服务自己的管理脚本 + start/stop/restart

NO.1:
[berry@berry:practice] service vpnagentd status
vpnagentd is stopped 
[berry@berry:practice] sudo service vpnagentd start
Starting up Cisco AnyConnect Secure Mobility Client Agent
[berry@berry:practice] service vpnagentd status
vpnagentd (pid 7000) is running
[berry@berry:practice] service vpnagentd restart
Shutting down Cisco AnyConnect Secure Mobility Client Agent
Starting up Cisco AnyConnect Secure Mobility Client Agent
[berry@berry:practice] service vpnagentd status
vpnagentd (pid 7020) is running


NO.2:
/etc/init.d/vpnagentd start
/etc/init.d/vpnagentd stop
/etc/init.d/vpnagentd restart


linux下：
/etc/rc.d/init.d/httpd start
service http start  // 红帽系统的专用

源码包用service管理
RPM包只能用绝对路径启动服务
------------------------------------

> df
查看磁盘空间占用情况：
-----------------------------------
df
df -lh :可视图看大小
df -h :可视图看大小
df -ah: 全部文件系统的使用情况
df -i: 显示inode信息
df -k: 以字节显示区块的占用情况
df -m: 以MB来显示文件的系统信息
df -T: 查看文件类型-type
df -t ext4: 只查看ext4这种文件类型
df -x ext4: 查看排除ext4类型外的其他类型文件
df -T -x ext4
df -T -t ext4
df --help:


> scp
-----------------------------------
1、从服务器上下载文件
scp username@servername:/path/filename /var/www/local_dir（本地目录）

 例如scp root@192.168.0.101:/var/www/test.txt  把192.168.0.101上的/var/www/test.txt 的文件下载到/var/www/local_dir（本地目录）


2、上传本地文件到服务器
scp /path/filename username@servername:/path   

例如scp /var/www/test.php  root@192.168.0.101:/var/www/  把本机/var/www/目录下的test.php文件上传到192.168.0.101这台服务器上的/var/www/目录中

 

3、从服务器下载整个目录
scp -r username@servername:/var/www/remote_dir/（远程目录） /var/www/local_dir（本地目录）

例如:scp -r root@192.168.0.101:/var/www/test  /var/www/  

4、上传目录到服务器
scp  -r local_dir username@servername:remote_dir
例如：scp -r test  root@192.168.0.101:/var/www/   把当前目录下的test目录上传到服务器的/var/www/ 目录




ftp服务器搭建：
---------------------------
也可见：onenote笔记 /linux/ftp
win:  https://blog.csdn.net/EXLsunshine/article/details/29181465
linux:  http://www.cnblogs.com/chenmh/p/5365274.html
        https://www.jianshu.com/p/4f988e70e85b
centos:  https://blog.csdn.net/zyw_java/article/details/75212608
默认启动端口为21：

****安装ftp****
which vsftpd #检测是否已经安装vsftpd
sudo apt-get install vsftpd
或者：
yum install -y vsftpd

netstat -lntp | grep 21  // ftp启动后都在21端口监听

此时ftp已经可以访问了： ftp://35.234.7.119

****更改启动状态****
sudo service vsftpd start #开启ftp服务
service vsftpd status #查看FTP的状态
sudo service vsftpd stop #停止ftp服务
sudo service vsftpd restart #重启ftp服务
sudo /etc/init.d/vsftpd restart #倘若上面的不行就使用路径的形式直接执行
sudo pkill vsftpd #有时候停止失败就干掉吧


wangsirlemon@c77:/$ cat /etc/vsftpd.conf | grep -v '^#'
listen=NO
listen_ipv6=YES
anonymous_enable=NO   #允许匿名用户
local_enable=YES   #允许使用本地账号登录
dirmessage_enable=YES
use_localtime=YES
xferlog_enable=YES
connect_from_port_20=YES
secure_chroot_dir=/var/run/vsftpd/empty
pam_service_name=vsftpd
rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem
rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key
ssl_enable=NO


root@c77:~# useradd ftpuser  //创建一个用户
root@c77:~# usermod -s /sbin/nologin ftpuser  // 限制该用户只能ftp服务器访问，不能直接登录服务器
root@c77:~# passwd ftpuser   // 设置用户的访问密码
Enter new UNIX password: 
Retype new UNIX password: 
passwd: password updated successfully
root@c77:~# mkdir -p /data/ftp/pub      // 在/data中创建相关的目录,/data/ftp 为主目录, 该目录不可上传文件;/data/ftp/pub 文件只能上传到该目录下
root@c77:~# echo "Welcome to wangsirlemon FTP service." > /data/ftp/welcome.txt  //创建登录欢迎文件
root@c77:~# chmod a-w /data/ftp && chmod 777 -R /data/ftp/pub   // 设置访问权限
root@c77:~# usermod -d /data/ftp ftpuser  // 设置为用户的主目录


> traceroute
------------------------------
http://man.linuxde.net/traceroute
traceroute www.baidu.com          // 默认参数为-q, 默认三次探测数据包向每个网关发送三个数据包，网关响应返回的时间
traceroute www.google.com

-d：使用Socket层级的排错功能；
-f<存活数值>：设置第一个检测数据包的存活数值TTL的大小；
-F：设置勿离断位；
-g<网关>：设置来源路由网关，最多可设置8个；
-i<网络界面>：使用指定的网络界面送出数据包；
-I：使用ICMP回应取代UDP资料信息；
-m<存活数值>：设置检测数据包的最大存活数值TTL的大小；
-n：直接使用IP地址而非主机名称； 禁用DNS解析，以ip格式输出数据。
-p<通信端口>：设置UDP传输协议的通信端口；
-r：忽略普通的Routing Table，直接将数据包送到远端主机上。
-s<来源地址>：设置本地主机送出数据包的IP地址；
-t<服务类型>：设置检测数据包的TOS数值；
-v：详细显示指令的执行过程；
-w<超时秒数>：设置等待远端主机回报的时间；
-x：开启或关闭数据包的正确性检验。

traceroute -q 4 www.58.com // 向每个网关发送四个数据包，网关响应返回的时间


> lsof
-------------------------
http://www.cnblogs.com/peida/archive/2013/02/26/2932972.html

lsof: 列出当前系统打开的文件的工具
lsof [参数][文件]   // root用户执行
lsof -n | grep deleted  // 查看已经删除的文件，空间有没有释放，没有的话kill掉pid   // kill -9 pid

-a 列出打开文件存在的进程
lsof -c mysql = lsof | grep myself
-c<进程名> 列出指定进程所打开的文件 command
-g  列出GID号进程详情
-d<文件号> 列出占用该文件号的进程
+d<目录>  列出目录下被打开的文件
+D<目录>  递归列出目录下被打开的文件
-n<目录>  列出使用NFS的文件
-i<条件>  列出符合条件的进程。（4、6、协议、:端口、 @ip ）
lsof -p 1       // 通过某个进程号显示该进行打开的文件
lsof -p 1,2,3   // 列出多个进程号对应的文件信息
lsof -p ^1      // 列出除了某个进程号，其他进程号所打开的文件信息
-p<进程号> 列出指定进程号所打开的文件 pid:  
-u  列出UID号进程详情 user
-h 显示帮助信息
-v 显示版本信息
lsof -i: 端口号,列出所有的网络连接   
lsof -i tcp: 列出所有tcp 网络连接信息
lsof -i udp: 列出所有udp 网络连接信息
lsof -i :3306: 列出谁在使用某个端口
lsof -i udp:55: 列出谁在使用某个特定的udp端口
lsof -a -u root -i: 列出某个用户的所有活跃的网络端口
lsof -N: 列出所有网络文件系统
lsof -u: 域名socket文件
lsof -g 5555: 某个用户组所打开的文件信息
lsof -d description(like 2): 根据文件描述列出对应的文件信息
例如： lsof  -d  txt      lsof  -d  1     lsof  -d  2
// 0表示标准输入，1表示标准输出，2表示标准错误，从而可知：所以大多数应用程序所打开的文件的 FD 都是从 3 开始
lsof -d 2-3     // 根据文件描述范围列出文件信息
lsof -c sshd -a -d txt     // 列出COMMAND列中包含字符串" sshd"，且文件描符的类型为txt的文件信息
lsof -i 4 -a -p 1234    // 列出被进程号为1234的进程所打开的所有IPV4 network files
lsof -i @peida.linux:20,21,22,25,53,80  -r  3  
// 列出目前连接主机peida.linux上端口为：20，21，22，25，53，80相关的所有文件信息，且每隔3秒不断的执行lsof指令




/////////////////////////////////////////////////////////////////// ss开始

openwrt:
https://cokebar.info/archives/664

墙外配置refer：
https://suiyuanjian.com/124.html                // google vps搭建
https://teddysun.com/357.html                   //秋水一键脚本，更新到2018-6-1
http://godjose.com/2017/06/14/new-article/      // google vps参考

ss故障排除：
https://doub.io/ss-jc39/

站长ping工具：
http://ping.chinaz.com/


进入准备工作：

/***********************************/ 更新常用软件
sudo –i
更新系统（两行命令分开执行，第二步等待时间较长，会出现####和进度百分百，耐心等）

apt update
apt upgrade
查看当前内核版本

uname -a
然后你会发现发现版本低于 4.9
安装新内核

apt install linux-image-4.10.0-20
卸载旧内核

apt autoremove
启用新内核

update-grub
重启

Reboot
验证内核版本

uname –r
看到如下类似如下回显，版本号为4.10.0-20-generic


sudo apt-get update

/***********************************/ 配置ssh

google vps默认配置的密码登录和root登录为关闭状态，默认只能使用ssh，如需要开启，需要配置：https://mapgun.com/archives/2235

1.生成ssh key;
ssh-keygen -t [rsa|dsa]                      // 默认用此方法  refer: https://blog.csdn.net/dongwuming/article/details/9705595
ssh-keygen -t rsa -f gcloud                  // 生成gcloud 名字的钥匙
ssh-keygen -t rsa -C "578628438@qq.com"      // 使用

2.在服务器中添加 public key, 并chmod 600 和 设置.ssh目录权限  

$ echo "" > ~/.ssh/authorized_keys   // server key location,非root用户下
$ chmod 600 authorized_keys
$ chmod 700 .ssh    //可选

3.ssh链接：

wanghaitao-MacBook:.ssh captain$
> ssh -i gcloud wangsirlemon@335.197.144.67  // 使用指定公钥登录

wanghaitao-MacBook:~ captain$ 
> ssh wangsirlemon@35.229.253.255  //默认公钥登录
> ssh -p 8989 wangsirlemon@35.229.253.255  //用端口号登录


wanghaitao-MacBook:.ssh captain$
> ssh-keygen -t rsa -f gcloud                    // 生成gcloud 
Generating public/private rsa key pair.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in gcloud.
Your public key has been saved in gcloud.pub.
The key fingerprint is:
SHA256:FVeLkoIDD4ayNqSzg/Z7gCK6srdwXvUhGGD6rp0/KBY captain@wanghaitao-MacBook.local
The key's randomart image is:
+---[RSA 2048]----+
|  o.+     . ...  |
|.+.o + .   + . . |
|+o  . + . + . .  |
|++   o . o .     |
|oo+ . o S        |
|*E . . o .       |
|*.=.o   .        |
|+Bo+..           |
|*==++.           |
+----[SHA256]-----+

wanghaitao-MacBook:.ssh captain$
> cat gcloud.pub 
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDVH6uhFMGlFKoN7XUdTHKEus77mCOvpkfz3rbXkee9WLPjpY1rBgDMhqZcco7Klmwoy1CaOmdBRlvs70ySXok72937hLvUshHoGqevwW+hpu3/5P+5fQXXMfNnFxkj7PE08pk8EkDoYUsu/JnN7qex3IH7Ps4iRQHuePdgFe/eUzLqHgzsTtsuEIYL64rDG2qs/jfWHqWeRvmxMiTr/bSm2uA9CJ/ebSW5N9rcEcJt+G/78cF+efUYCNz3pRQ5iimsp2aH5mUkDoWOOWNPh9j7biaZoN6fjleDMx9V6nxtEHmdwUN8JexUI74z/76hQOiqA4wGSTL0BMjJpfTitM3T captain@wanghaitao-MacBook.local


wangsirlemon@instance-static:~$ cd .ssh
wangsirlemon@instance-static:~/.ssh$ ls -al
total 8
drwx------ 2 wangsirlemon wangsirlemon 4096 Jul 17 08:56 .
drwxr-xr-x 5 wangsirlemon wangsirlemon 4096 Jul 17 08:43 ..

wangsirlemon@instance-static:~/.ssh$                     // 在server生成key
> echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDVH6uhFMGlFKoN7XUdTHKEus77mCOvpkfz3rbXkee9WLPjpY1rBgDMhqZcco7Klmwoy1CaOmdBRlvs70ySX
ok72937hLvUshHoGqevwW+hpu3/5P+5fQXXMfNnFxkj7PE08pk8EkDoYUsu/JnN7qex3IH7Ps4iRQHuePdgFe/eUzLqHgzsTtsuEIYL64rDG2qs/jfWHqWeRvmxMiTr/bSm2uA9CJ/ebSW5N9rcEcJt+G/78cF+efUYC
Nz3pRQ5iimsp2aH5mUkDoWOOWNPh9j7biaZoN6fjleDMx9V6nxtEHmdwUN8JexUI74z/76hQOiqA4wGSTL0BMjJpfTitM3T captain@wanghaitao-MacBook.local" > authorized_keys

wangsirlemon@instance-static:~/.ssh$ chmod 600 authorized_keys 


mine:
echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChXavIw8d9R9WDc25aaHeR9CMHXtr5UT4lgUH0tthFLh3M4/T7F16eDKIm98Ax33VtSecRqJSk3IF9VlYdcn9sWKNg8Nb0REtv1NQgHdKwOj1t+RqyMVxr9eLgdgCTYxpsWhP5Cnx55sOLsXE1xHw9AbFkE+yeflaHcZ3Nv+vwxpSEXJhKJkLG/Z/e7PMEAB5nyWffhtKVxFonrEhB69fiKm1FiZs0ly/QpWcaXfmyIgasiNUe+Rm/6IMz2qhTrFzr2YUqFKAvslvODMUlPf3/RRXbBUr6YJb0ci68aMBhLVUb2GnNMXH6WtfJGpg/r1IW8PCtGg0RyAg4YNvUbLNF 578628438@qq.com" > ~/.ssh/authorized_keys


echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChXavIw8d9R9WDc25aaHeR9CMHXtr5UT4lgUH0tthFLh3M4/T7F16eDKIm98Ax33VtSecRqJSk3IF9VlYdcn9sWKNg8Nb0REtv1NQgHdKwOj1t+RqyMVxr9eLgdgCTYxpsWhP5Cnx55sOLsXE1xHw9AbFkE+yeflaHcZ3Nv+vwxpSEXJhKJkLG/Z/e7PMEAB5nyWffhtKVxFonrEhB69fiKm1FiZs0ly/QpWcaXfmyIgasiNUe+Rm/6IMz2qhTrFzr2YUqFKAvslvODMUlPf3/RRXbBUr6YJb0ci68aMBhLVUb2GnNMXH6WtfJGpg/r1IW8PCtGg0RyAg4YNvUbLNF 578628438@qq.com" > authorized_keys


XShell连接服务器
--------------------
https://51.ruyo.net/2144.html
Google Cloud 自带的SSH工具非常好用了。如果你想本地连接上去管理，也是可以的~

首先使用自动SSH连接上去，然后 sudo -i切换到 root

vi /etc/ssh/sshd_config 
#修改以下内容即可
 
#允许密码登录 将注释去掉
PermitRootLogin yes
 
#修改成 yes
PasswordAuthentication no
 
#重启SSH即可
/etc/init.d/sshd restart

/***********************************/ 安装ss
1.切换用户：
sudo -i    // sudo su

2.安装ssr
wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocksR.sh
chmod +x shadowsocksR.sh
./shadowsocksR.sh 2>&1 | tee shadowsocksR.log

3.bbr加速
wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.sh && chmod +x bbr.sh && ./bbr.sh


验证bbr： 
https://teddysun.com/489.html/comment-page-7
--------------------
uname -r:
一般显示为最新版就ok

sysctl net.ipv4.tcp_available_congestion_control        // bbr状态检测
返回值出现：
net.ipv4.tcp_available_congestion_control = bbr cubic reno
或者为：
net.ipv4.tcp_available_congestion_control = reno cubic bbr

sysctl net.core.default_qdisc
返回值为：
net.core.default_qdisc = fq

lsmod | grep bbr
返回值有 tcp_bbr 模块即说明 bbr 已启动。注意：并不是所有的 VPS 都会有此返回值，若没有也属正常。



ss问题排查：
https://shadowsocks.org/en/download/clients.html      //ss webstie
https://doub.io/ss-jc39/

①启动Shadowsocks服务端：service supervisord start
②关闭Shadowsocks服务端：service supervisord stop
③重启shadowsocks服务端：service supervisord restart


netstat -lntp
/etc/init.d/shadowsocks staus  // ss状态
/etc/init.d/shadowsocks start   // start   
/etc/init.d/shadowsocks restart  // 重启ss
./shadowsocks-libev.sh uninstall   //卸载ss,需要在root中


/***********************************/ 安装ipsec

https://github.com/hwdsl2/setup-ipsec-vpn

apt-get update && apt-get dist-upgrade  and reboot
wget https://git.io/vpnsetup -O vpnsetup.sh && sudo sh vpnsetup.sh


/***********************************/终端翻墙
https://www.jianshu.com/p/99c5c675fe47
================================================



ss 配置:
root@c77:~# cat /etc/shadowsocks.json 

服务器端口：默认为 8989
密码：默认为 teddysun.com
加密方式：默认为 aes-256-cfb
协议（Protocol）：默认为 origin
混淆（obfs）：默认为 plain
--------------------------------------



================================================


================================================

================================================


/***********************************/ 安装outliner
outline配置IOS客户端 server:
https://steemit.com/cn/@zhijun/outline

git: https://github.com/Jigsaw-Code/outline-server

server run:
bash -c "$(wget -qO- https://raw.githubusercontent.com/Jigsaw-Code/outline-server/master/src/server_manager/install_scripts/install_server.sh)"





/////////////////////////////////////////////////////////////////// 重拾linux

linux服务器踩点网站：
www.netcraft.com

必须分区：根分区，swap分区（最大为内存的2倍）
推荐分区：boot分区（200M左右）
给每个分区要分配挂载点
/dev/hd
/dev/sd
/dev/cdrom,sr0
/dev/fd：软盘
/dev/lp：打印机
/dev/usb/lp： usb打印机
/dev/mouse

ifconfig eth0 192.168.2.223 //配置eth0的ip

/bin/
/sbin/
/usr/bin/
/user/sbin/：超级用户
/boot/：启动文件
/dev/：设备文件
/etc/：配置文件
/home/
/lib/: 系统调用的函数库保存位置
/lost+found/:系统以外崩溃和关机，产生的碎片, fsck工具
/mnt/：挂载目录
/media/：挂载目录
/mnt/：挂载目录
/misc/：挂载目录
/opt/：三方安装软件保存位置，但一般放在/usr/local目录中
/proc/:虚拟文件系统，cpu,filesystem
/sys/:虚拟文件系统，内核相关的信息
/root/:超级用户目录
/srv/:服务数据目录
/tmp/:最好每次开机把改目录清空
/usr/: 类似于windows中windows目录
/var/:缓存，日志，

服务器：
1.不关机，只能重启，重启时应该关闭服务
2.访问高峰运行时，不要运行高负载命令
3.远程配置防火墙的时，不要把自己踢出服务器
4.ssh服务一般在22端口运行
5.密码规范并定期更新
6.合理分配权限
7.定期备份重要数据和日志


mkdir -p /tmp/little/bodu /tmp/little/cang: -p可以连续创建不存在的目录,可以连续跟进多个目录
mkdir -p tt/tt1
cd, pwd
..上一级目录，.是当前目录
rmdir:  删除空目录 (windows中的del )

cp -rp /tmp/bb  /tsd/kh: 
-r为复制目录, -p为复制文件的属性，也可以同时复制多个目录；复制目录同时可以更名
mv 源 目的: 更名

清除屏幕： ctrl + r或者clear 
rm -rf


查看文件：
------------------
touch "program files":创建文件最好不要空格，有空格则用引号引起来
nano:
cat -n
tac xx:倒序查看
more xx.txt:,q退出，只能往下翻，不能往回翻
less xx.txt:查看内容，也可以用向上，下，pageup,pagedown来查看，/来搜索关键词跟vi类似，q退出,n匹配下一个字符
head -n 10 xx.txt:前10行：默认查看10行
tail -n 7 xx.txt:后面10行:默认查看10行; -f:动态显示文件末尾内容
printenv
emacs

locate .profile : 定位文件
df -lh
lsb_release -a
free -h:查看内存信息


shutdown:
--------------
shutdown now  立刻关机
shutdown +5   5分钟后关机
shutdown 23:10  设置系统在23点10分时关机
shutdown -r now  立刻关闭系统并重新启动

shutdown -c :取消前一个关机命令
shutdown -h :关机
shutdown -r :重启    推荐使用shutdown 来重启

halt
poweroff   直接断电
init 0     这些都是关机命令

reboot:
----------------
reboot  -f：强制重新开机，不调用shutdown指令的功能；
reboot  -i：在重开机之前，先关闭所有网络界面；
reboot  -n：重开机之前不检查是否有未结束的程序； 
reboot -w：仅做测试，并不真正将系统重新开机，只会把重开机的数据写入/var/log目录下的wtmp记录文件
init 6 :重启

系统运行级别：
---------------
cat /etc/inittab
0  关机
1  单用户（通win的安全模式，启动最小的服务）
2  不完全多用户，不含NFS（网络文件系统）服务，类似：文件共享
3  完全多用户
4  未分配
5  图形界面
6  重启

id:3:initdefault:     //修改系统默认的运行级别
runlevel              //查询系统运行级别
wangsirlemon@c77:~$ runlevel
N 5                   // N为上一次运行的级别，N标识null, 5表示当前的运行级别
 


管道，grep
----------------
ls -al | more  且
ls -al && less  接着
lskk || pwd  或者


输入输出重定向：
-----------------
输出重定向：
ls -l /tmp > /tmp.msg   >  为写入
data >> /tmp.msg        >> 为追加

输入重定向:
wall < /etc/motd 将motd文件信息进行广播

错误的输出重定向：
cp -R /usr /backup/usr.bak 2 >/back.error  将拷贝的错误信息存入到/back.error中


ps
-----------------
-aux
-a：显示所有用户的进程
-u：显示用户名和启动时间
-x：显示 没有控制终端的进程
-e：显示所有进程，包括没有控制终端的进程
-l：长格式显示
-w：宽行显示，可以使用多个w进行加宽显示

file:
--------------------
判断文件类型


vi/vim
--------------------
https://www.cnblogs.com/yangjig/p/6014198.html
0|^, $ 单行
gg, G, XG 多行
(,) 句
{,} 段

H,M,L  -------光标定位
h,j,k,l,
9k,12j

dd,D  :删除行(准确为剪切),行内容
33,56d  :删除33到56行
dG :删除当前行至文件尾的内容
dgg :删除当前行至文件头的内容
dd :剪切当前行
3dd :剪切当前行以下3行
p,P  :粘贴在当前光标所在行下或行上
pp :粘贴行

r :改光标所在的字符
R : 一直处于替换模式,esc退出replace模式
x :删除光标字符
X ：删除光标左边字符
S ：删除光标所在的列，并进入输入模式
J :删除换行符


v,v  V,V  ctrl+v,ctrl+v -------选中区域
ggVG 选中全部的文本， 其中gg为跳到行首，V选中整行，G末尾

选中之后可以进行：d删,y复制,p粘贴,（不选中，默认一行）
"+y    复制到系统剪贴板(也就是vim的+寄存器） 
"+p   从系统剪贴板粘贴 

u :撤销，U是撤销一行的全部操作
ctrl+r :重做
. :重复上一次动作

/?搜索   支持正则，/vim$ /vim\$  n:下一个；N:上一个      //https://harttle.land/2016/08/08/vim-search-in-file.html
注意查找回车应当用\n，而替换为回车应当用\r（相当于<CR>）
/Width\c  \c表示大小写不敏感，\C表示大小写敏感

i :插入
o :下面另起一行
O :上面另起一行 
:w filename  另存为
:wq!  文件所有者和root用户可以使用

:set nu  :行定位 :set number
:set nonu
:n      :定位到哪一行
nG      :定位到哪一行


ctrl + g :统计行信息
g ctrl+g字数统计


替换字符：https://harttle.land/2016/08/08/vim-search-in-file.html
:s/foo/bar/g             :当前行
:%s/foo/bar/g            :全文，foo为搜索字符，bar为替换的值
:'<,'>s/foo/bar/g        :visual模式下选中的区域
:5,12s/foo/bar/g         :5到12行
:.,+2s/foo/bar/gci       :当前行.与接下来两行+2; g表示全局，c表示确认模式,i表示大小写不敏感，I表示大小写敏感

:1,4s/^/#/g         :为1-4添加#号
:1,4s/^#//g          :删除1-4行的行首的#号


replace with bar (y/n/a/q/l/^E/^Y)?
询问模式中：y表示替换，n表示不替换，a表示替换所有，q表示退出查找模式， l表示替换当前位置并退出。^E与^Y是光标移动快捷键


vim使用技巧：
-----------------------
:r /etc/issue/abc.txt       可以导入路径中abc的内容到光标的位置
:!which ls        在不退出vim的状况下查找命令,查找存放在哪一个目录下
:r !date          可以引入时间到文本中，可以直接导入命令的执行结果
:map ^P I#<esc>   定义快捷键，在每行的按ctrl+p可以用#注释这一行
:map ^B 0x        定义快捷键，在每行的按ctrl+b可以取消#注释     
（格式：map 快捷键 触发命令）录制命令时，先按ctrl+v,再输入快捷键
同样可以定义快捷键插入邮箱等信息
:ab mymail sample@example.com     那么以后输入mymail回车之后都会用后面的邮箱地址进行替换（insert模式）


mac配置vim
--------------------------
https://blog.csdn.net/yuanmengong886/article/details/52914714
https://www.jianshu.com/p/9fa9bedc259a
主题：https://vimcolors.com/
cp  /usr/share/vim/vimrc  ~/.vimrc
cp  /usr/share/vim/vimrc  ~/.vimrc

.vimrc中是永久生效的，普通用户在用户名目录下，root用户在root用户下

"如下为自定义设置
set autoindent        " 自动对齐
set number            " 显示行号
set hlsearch          " 高亮搜索结果
set wrap              " 自动换行
set incsearch         " 立即高亮显示当前匹配
set ignorecase        " 忽略大小写
set smartcase         " 如果有一个大写字母，则切换到大小写敏感查找  
set showmatch         " 高亮显示对应的括号

set confirm           " 在处理未保存或只读文件的时候，弹出确认
set tabstop=4         " Tab键的宽度
set cursorline        " 突出显示当前行 
"set cursorcolumn      " 突出显示当前列
set clipboard+=unnamed   " 共享剪贴板

" 语法高亮
syntax on          
set fileencodings=utf-8,gb2312,gbk,cp936,latin-1
set fileencoding=utf-8
set termencoding=utf-8
set fileformat=unix
set encoding=utf-8

" 配色方案
" default,delek,murphy
colorscheme default
" 指定配色方案是256色
set t_Co=256
set wildmenu

" C风格的对齐方式
set cindent
set completeopt=longest,menu

" 文件被改动时自动载入
set autoread
" 顶部底部保持3行距离
set scrolloff=3

" 代码补全
set completeopt=preview,menu
" 设置字体
set guifont=Menlo:h16:cANSI

"syntax enable         " 语法高亮
"set nu!               " 显示行号
"设置光标样式为竖线vertical bar
" Change cursor shape between insert and normal mode in iTerm2.app



iptables;
----------------------
http://man.linuxde.net/iptables
iptables -L -n -v: 查看已经添加的规则
INPUT链：处理输入数据包。
OUTPUT链：处理输出数据包。
PORWARD链：处理转发数据包。
PREROUTING链：用于目标地址转换（DNAT）。
POSTOUTING链：用于源地址转换（SNAT）。

ln:
---------------------
link:
ln -s /etc/issue.bak issue.bak.soft 
软连接：类似win的快捷方式,文件以l开头,权限为lrwxrwxrwx,所有用户可读写执行,字节大小为一个快捷方式大小，很小；
ln /etc/issue.bak issue.bak.hard
硬连接：就是程序的执行,类似拷贝，即使原文件删除，依然可以访问 ,不能跨分区，不能对目录进行使用，文件属性与原文件保持一致,类似cp -p，会同步更新：一般做备份用,

echo "xxx" >> /etc/host   : 在文件末尾进行追加

ls -i:
-------------
每一个文件有一个id, -i可以查看，如果是硬链接，则两个文件的id一致，更新一个文件的同时，也会更新另外一个文件


chmod:
-----------------
chmod [ugoa][+-=][rwx] 文件目录： u:user, g:group, o:other, a:all
chmod g+w,o-r sys.bakfile: 同时操作多个权限 
chmod g=rwx sys.bak
chmod 700 sys.bak ：一般操作习惯用数字来表示
532： r-x-wx-w-
chmod -R 700 /tmp: -R为递归，包括目录和目录中的文件

note:
1.删除一个文件不是对一个文件有写的权限，而是对这个文件所在的目录有写的权限
2.一般rx的权限是成对出现的；写和非写的权限
3.r: ls;                       cat/more/less/head/tail
  w: touch/mkdir/rmdir/rm;     vim/vi
  x: cd;                       script cmd


chmod u(g)+s /bin/touch :给/bin/touch命令 设置userid或者groupid



chown:
----------------
-R：递归
改变所有者
useradd   谁创建这个文件，谁就是这个文件的拥有者，组的缺省值为创建者owner

chgrp:
---------------
改变所属组
groupadd

umask:
---------------
$ :umask -S
u=rwx,g=rwx,o=rx    // linux默认文件创建权限：drwxr-xr-x
-rw-r--r--          // linux默认创建的文件是不具备执行的属性
$ :umask
0002    //777-002=755
umask 023        更改缺省值


find:
-----------------
find[范围][条件]
find / -name init   //名字为init，为精准搜索， / 为根目录的意思
find /etc -name *init*    //文件名包含init，*为通配符，类正则
find /etc -name init？？？   //三个?代表三个字符，？为单个字符 
find /etc -iname *init*    //-iname不区分大小写


find  /etc -size +204800 
// 查找大于100M的文件，1个数据块为512字节，0.5k; 100M=102400KB=204800块，数据块为linux存储的最小字节；
// 数字前面+为大于，-为小于,等于前面没有符号

find /etc -user xxxx:按用户查找

find /etc -cmin -5  //查找5min内被修改过的文件和目录,-5为5分钟内，+5为超过5分钟
-amin   :访问时间access
-cmin   :文件属性changes
-mmin   :文件内容modify

find /etc -size +163840 -a -size -204800   : -a为连接符，且的关系；查找大于80M,小于100M的文件； -o为或

find /etc -name init -exec ls -l {} \;      :查看init文件并显示其详细信息 
-exec/-ok为执行，-ok的区别是会询问是否操作，用y,n来确认    {} \;是固定格式,  

find /etc -name init* -a -type d   :查看名字以init开头的目录
-type : 文件类型，f文件，d目录，l为链接文件

-inum: i节点查找
find . -inum 31531 -exec rm {} \; //以i节点查找然后删除，用于删除一些无法打印出来的奇怪字符的文件  


locate:
---------------------
updatedb    :更新文件数据库，除开/tmp等存放临时文件的目录，不会收录
locate xx.txt : 定期进行更新文件列表，如果需要查找刚刚创建的文件，则需要updatedb一下；find是现在立即查找‘
locate -i xx :-i表示不区分大小写

which/whereis:
---------------------
$ which cp
/bin/cp  除了可以查看文件路径，还可以查看文件别名；/bin为普通权限，/sbin为root权限
alias   :查看别名
alias rm='rm -i'  :设置别名，当重启或者登陆后，别名被删除，永久生效需要在主目录下配置.bashrc
unalias 别名   :删除别名,

如果cp命令有一个别名，如果要使用自己本来的意义则前面加一斜杠 \cp

wangsirlemon@c77:~$ which cp
/bin/cp
wangsirlemon@c77:~$ whereis cp
cp: /bin/cp /usr/share/man/man1/cp.1.gz     //后面为帮助文档，帮助文档一般在/usr/share目录下


man:
-------------
man ls
man date
man services: 查看配置文件的帮助信息；这儿不用输入绝对路径：/etc/services,输入配置文件名就可以了；
man查看文件,如果遇到命令和服务名字相同的，1为命令的帮助，5为配置文件的帮助,如果不输入数字则默认查看命令的帮助文档
~$ man 1 passwd
~$ man 5 passwd
~$ man passwd
~$ whereis passwd    ://列出了命令，服务，以及对应的帮助文档
passwd: /usr/bin/passwd /etc/passwd /usr/share/man/man5/passwd.5.gz /usr/share/man/man1/passwd.1ssl.gz /usr/share/man/man1/passwd.1.gz

whatis:
--------------
简略查看帮助信息
wangsirlemon@c77:~$ whatis passwd
passwd (1ssl)        - compute password hashes
passwd (1)           - change user password
passwd (5)           - the password file
wangsirlemon@c77:~$ whatis ls
ls (1)               - list directory contents

apropos:
---------------
apropos services   :简略查看某个服务的帮助信息 //注意不用绝对路径


--help:
---------------
touch --help

info:
---------------
info info

help:
---------------
help shell内置命令: ，如cd,umask
man cd/if/pwd: 可以查看内置的命令
help if
help umask

history:
--------------
查看历史记录命令

查看当前用户
------------------------
> who: 查看主机上的用户 
> w: 查看当前用户 -----查看用户的详细信息，比who更详细
> whoami: 查看当前登录的用户是谁
> lastlog | head -n 5: 查看主机上的用户
> uptime :连续运行多长的时间


用户管理命令：
useradd yangmi
passwd yangmi  //root用户可以设置简单密码，普通用户不能设置简单的密码，管理员可以更改任何人的密码

$ who   //查看当前登录的用户； 登录终端，tty本地终端，pts远程终端，另外可以看到登录时间，还有登录的ip,没有则为本地
captain  console  Aug  6 08:56 
captain  ttys000  Aug  6 14:36 
captain  ttys001  Aug  6 17:26 

wangsirlemon@c77:~$ who
wangsirlemon pts/0        2018-08-06 07:25 (182.150.28.13)

wangsirlemon@c77:~$ w
 09:30:25 up 6 days,  7:19,  1 user,  load average: 0.00, 0.00, 0.00     
USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT
wangsirl pts/0    182.150.28.13    07:25    1.00s  0.11s  0.00s w

//up通uptime，表示连续运行的时间，load average表示负载平均值，分别表示1min,5min,15min
//IDLE表示空闲多久了
//PCPU：cpu当前的占用时间
//WHAT: 当前CPU在执行什么命令


==============================
压缩和解压：
.gz        gzip        gunzip(gzip -d)
.tar       tar -cf     tar -xf
.tar.gz    tar-zcf     tar -zxf
.zip       zip -r      unzip
.bz2       bzip2       bunzip2
.tar.bz2   tar -cjf    tar -xjf


gzip:
-----------------
.gz .zip(最古老的)

rm -rf *   ：删除当前目录下所有文件

gzip xx.tar  ：只能压缩文件,不能压缩目录，跟win不一样，且不保存原文件
gzip test.tar

解压缩：
gunzip  xxx.xx
gzip -d  xxx.xx  


tar:
-------------------------
压缩：
1.先用tar打包目录，再用gzip来打包
2.-z :打包和压缩一起做

tar -cvf 压缩后的名字.tar 目录    :-v表示详细信息，这个可以打包目录和文件,-c为打包的意思，-z就是打包和压缩一起做了
gzip  janpan.tar                :压缩janpan.tar，会生成一个压缩包

压缩：
tar -zcf janpan.tar.gz Japan : //打包和压缩一起做了,-v只能加在中间，不能加在末尾
tar -jcf janpan.tar.bz2 Japan  //用tar来压缩gz

解压：
tar -zxf xx.tar   :一般用这个命令比较多，不用显示详细信息
tar -jxf janpan.tar.bz2   //用tar来解压gz

参数：
-x :解包
-c :打包
-f :指定解压文件 
-z :打包/解包，压缩一起做
-v :详细信息
-j :打包成bzip2格式 


zip:
------------------------
win,linux,mac都兼容; 会保留原文件
zip [-r] [压缩后的文件名] [文件和目录]   : -r表示压缩目录；

unzip 文件目录名字  ：打包；zip文件也可以用tar来解压, 和进行压缩


bzip2:
-------------------
gzip的升级，压缩率很高，大文件一般推荐这种
-k :相对于gzip多了一个-k的选项，意思是保留原文件

压缩：
bzip2 [-k] test.tar.gz  : //他是压缩一个打包好的文件，不是目录
tar -cjvf janpan.tar.bz2 Japan  //用tar来压缩gz

解压：
bunzip2 [-k] janpan.tar.bz2
tar -xjvf janpan.tar.bz2   //用tar来解压gz,只能解压tar压缩后的gz



网络管理命令：
===================================

域名解析：（把域名解析成一个ip）
nslookup
-----------------
nslookup domain [dns-server]
nslookup facebook.com 8.8.8.8  //157.240.13.35

或者直接输入nslookup
nslookup baidu.com    //域名
nslookup 220.181.57.216  //ip


dig:
--------------------
比nslookup好用
@<服务器地址>：指定进行域名解析的域名服务器；
-b<ip地址>：当主机具有多个IP地址，指定使用本机的哪个IP地址向域名服务器发送域名查询请求；
-f<文件名称>：指定dig以批处理的方式运行，指定的文件中保存着需要批处理查询的DNS任务信息；
-P：指定域名服务器所使用端口号；
-t<类型>：指定要查询的DNS数据类型；
-x<IP地址>：执行逆向域名查询；
-4：使用IPv4；
-6：使用IPv6；
-h：显示指令帮助信息。

dig www.facebook.com @8.8.8.8 +short  //通过指定DNS解析得到的最终域名157.240.13.35
dig +trace www.scnu.edu.com    //跟踪域名解析； https://blog.csdn.net/a583929112/article/details/66499771
dig www.baidu.com  // CNAME是别名；A是address,ip; NS是服务器的主机名;在AUTHORITY SECTION里面的服务器主机名，都会在ADDITIONAL SECTION里给出该主机的IP地址。
dig -t soa www.baidu.com  //解析域名的主从关系  soa:start of authority

trace:
--------------------
源码位于：\kernel\trace\trace.c

traceroute:
--------------------
refer to line:320


通信命令：
write:
--------------------
write lingzhiling
给用户发信息，ctrl + D 结束，用户在线才能发信息,可以用w查看谁登陆了


wall:
--------------------
(write all):发送广播信息
wall shengchao is a honest man!
给所有用户发信息，所有用户都能收到，包括自己。


ping -c:
-------------------

ifconfig

ifconfig eth0 192.168.2.223 //配置eth0的ip


mail:
----------------
mail 用户: 发邮件，可以用户不在线,ctrl + D结束并发送
用户登陆，并输入mail可以查看邮件列表； 输入序列号查看邮件内容； 删除邮件：d 序列号；重查看邮件列表 h； 退出mail,q键


last, lastlog, history
----------------
last:查看所有用户的登陆信息
lastlog:知道每个用户(包括没有登录过的用户)的最后一次登陆的信息
lastlog -u uid(用户的uid):可以查看指定用户的信息



netstat:
---------------
tcp：电话
udp: 发短信

netstat -tlun ：查看监听的端口
netstat -an  ：查看正在建立连接的端口
netstat -rn  :查看网关地址


setup:
---------------
在redhat系列的linux上面才可用，unix不能用

mount:
---------------
mount [-t 文件系统] 设备文件名 挂载点
mkdir  /mnt/cdrom    :挂载的前一步一般会先在mnt目录下创建一个空目录
mount -t iso9660  /dev/sr0 /mnt/cdrom    ：光盘的系统一般都为iso9660
umount /dev/sr0    :退出挂载的目录，然后再执行卸载光盘


mkdir /mnt/cdrom
mount /dev/cdrom /mnt/cdrom
cd /mnt/cdrom


logout:
-----------------
退出登录
服务器操作完或者远程登录后，一定要logout



rpm,yum
------------------
一个为本地，一个为在线安装

1.先挂载安装镜像
2.进入目录：rpm -ivh xxxx.rpm
3.升级： rpm -Uvh xxxx.rpm
4.卸载： rpm -e  httpd(包名) //只写包名，不用写全名；不会卸载依赖
rpm -q httpd   //查看httpd安装没有，并列出信息
rpm -qa  //显示所有的安装包
rpm -qi httpd  // 显示安装包的详细信息
rpm -ql httpd   //显示安装的位置
rpm -V httpd   //校验指定的包中文件


安装：
[root@localhost ~]# rpm -ivh sudo-1.7.2pl-5.el5. 5.el5 .rpm    
-i  安装所选择的一个或多个软件包
-H  用“#”显示完成的进度
-q  查询软件包系统或所选择的一个或多个软件包 
-e 删除所有选择的一个或多个软件包 
-u 把一个已经安装好的软件包升级到新版本 
-v 验证已安装或已选择的一个或多个软件包
[root@localhost ~]# rpm -ivh sudo   查询sudo软件包是否被安装
 
其他选项：
--excludedocs
不安装软件包中的文档文件
--prefix PATH
将软件包安装到由PATH指定的路径下
--test
只对安装时行测试，并不实际安装
--replacepkgs 
覆盖安装，假如我们不小心删除掉了安装包里的某些软件，这个参数就非常有用了
-U 
在参数中加入大写的U可以对软件进行升级
[root@localhost ~]# rpm -Uvh sudo-1.7.2pl-5.el5. 5.el5 .rpm
 
卸载：
注意：如果其它软件包有依赖关系，卸载时会产生提示信息，可使用--nodeps强行卸载
[root@localhost ~]# rpm -e --nodeps sudo   但是一般不推荐这样用，我们可以先卸载依赖的软件包然后再卸载。


本地和在线安装包都可以用yum 来进行管理


readhat系列(centos)有setup命令
service network restart :重启网络服务
yum list：列出安装
yum -y update 包名：更新
yum -y remove 包名：卸载
yum grouplist
yum groupinstall 组名：
yum groupremove 组名：
yum install          安装
yum check-update     检测升级
yum update           升级
yum list             软件包查询
yum info             软件包信息
yum remove           卸载
yum -help 
man yum              帮助 

源码包
保存位置：/usr/local/src
安装位置：/usr/local

上传文件在win中往linux传： wincp软件(ssh + scp)
./configure 软件配置与检查
make :编译
make install :编译安装
make clean :清空编译文件

webmin
------------------
webmin是linux中的图形文件管理后台  




用户组：
---------------
/etc/passwd
/etc/shadow是存放用户密码的（密文形式存放）

UID:
0:超级用户
1-499：系统用户(伪用户)
500-65535：普通用户


/home/用户名:普通用户
/root/：超级用户

/bin/bash/ : shell


setUID

